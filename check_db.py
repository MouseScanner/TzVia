from dotenv import load_dotenv
load_dotenv()

import asyncio
import asyncpg
import os

async def check_database():
    DATABASE_URL = os.getenv("DATABASE_URL", "postgresql+asyncpg://postgres:postgres@localhost:5432/movie_reviews")
    asyncpg_url = DATABASE_URL.replace("postgresql+asyncpg://", "postgresql://")
    
    print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫: {asyncpg_url}")
    
    try:
        conn = await asyncpg.connect(asyncpg_url)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è vector
        result = await conn.fetch("SELECT * FROM pg_extension WHERE extname = 'vector';")
        if result:
            print("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ pgvector —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        else:
            print("‚ùå –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ pgvector –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            print("–ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏...")
            await conn.execute("CREATE EXTENSION IF NOT EXISTS vector;")
            print("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ pgvector —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é PostgreSQL
        version = await conn.fetchval("SELECT version();")
        print(f"üìä –í–µ—Ä—Å–∏—è PostgreSQL: {version}")
        
        await conn.close()
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        print("3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ PostgreSQL —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π pgvector:")
        print("   docker run --name postgres-pgvector -e POSTGRES_PASSWORD=password -e POSTGRES_DB=movie_reviews -p 5432:5432 -d pgvector/pgvector:pg15")

if __name__ == "__main__":
    asyncio.run(check_database()) 